services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - my_network
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - 9091:9091
    networks:
      - my_network
  monitoring:
    build: monitoring/.
    container_name: monitoring
    depends_on:
      grafana:
        condition: service_healthy
    networks:
      - my_network
  grafana_setup:
    build: grafana/.
    container_name: grafana_setup
    depends_on:
      grafana:
        condition: service_healthy
    environment:
      GRAFANA_USERS: ${GRAFANA_USERS}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    networks:
      - my_network
networks:
  my_network:
    driver: bridge
volumes:
  prometheus_data: {}
